<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>原型链和继承 on </title>
    <link>https://xiaowoniu22.github.io/categories/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%92%8C%E7%BB%A7%E6%89%BF/</link>
    <description>Recent content in 原型链和继承 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Nov 2022 14:49:24 +0800</lastBuildDate><atom:link href="https://xiaowoniu22.github.io/categories/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%92%8C%E7%BB%A7%E6%89%BF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不要再纠结于原型链和继承了</title>
      <link>https://xiaowoniu22.github.io/posts/post16/</link>
      <pubDate>Thu, 10 Nov 2022 14:49:24 +0800</pubDate>
      
      <guid>https://xiaowoniu22.github.io/posts/post16/</guid>
      <description>从这两个角度角度理解js原型链和继承，希望你不要再纠结原型链了。
原型链就是链表 从构造函数的属性（及方法）的类型出发来实现继承（此处没有考虑静态属性和方法） 首先，要明白原型链就是链表，链表就包含节点和连接方式两个要素。实例对象或者构造函数的原型对象都可以作为节点，总之节点就是个对象。连接方式就是每个节点的__proto__（[[Prototype]]）,每个节点通过__proto__指向上一个节点来实现继承。
所以，当你需要实现继承的时候只需要将节点的__proto__指向需要继承的父节点就可以了。这时你可能想到直接修改子节点的__proto__，像这样
child.prototype.__proto__ = Parent.prototype 但是
此时，你需要一个新的对象，这个对象的__proto__ 指向Parent.</description>
    </item>
    
  </channel>
</rss>
